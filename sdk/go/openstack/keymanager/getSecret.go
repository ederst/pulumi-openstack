// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keymanager

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/keymanager_secret_v1.html.markdown.
func LookupSecret(ctx *pulumi.Context, args *GetSecretArgs) (*GetSecretResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["aclOnly"] = args.AclOnly
		inputs["algorithm"] = args.Algorithm
		inputs["bitLength"] = args.BitLength
		inputs["createdAtFilter"] = args.CreatedAtFilter
		inputs["expirationFilter"] = args.ExpirationFilter
		inputs["mode"] = args.Mode
		inputs["name"] = args.Name
		inputs["region"] = args.Region
		inputs["secretType"] = args.SecretType
		inputs["updatedAtFilter"] = args.UpdatedAtFilter
	}
	outputs, err := ctx.Invoke("openstack:keymanager/getSecret:getSecret", inputs)
	if err != nil {
		return nil, err
	}
	return &GetSecretResult{
		AclOnly: outputs["aclOnly"],
		Algorithm: outputs["algorithm"],
		BitLength: outputs["bitLength"],
		ContentTypes: outputs["contentTypes"],
		CreatedAt: outputs["createdAt"],
		CreatedAtFilter: outputs["createdAtFilter"],
		CreatorId: outputs["creatorId"],
		Expiration: outputs["expiration"],
		ExpirationFilter: outputs["expirationFilter"],
		Metadata: outputs["metadata"],
		Mode: outputs["mode"],
		Name: outputs["name"],
		Payload: outputs["payload"],
		PayloadContentEncoding: outputs["payloadContentEncoding"],
		PayloadContentType: outputs["payloadContentType"],
		Region: outputs["region"],
		SecretRef: outputs["secretRef"],
		SecretType: outputs["secretType"],
		Status: outputs["status"],
		UpdatedAt: outputs["updatedAt"],
		UpdatedAtFilter: outputs["updatedAtFilter"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getSecret.
type GetSecretArgs struct {
	// Select the Secret with an ACL that contains the user.
	// Project scope is ignored. Defaults to `false`.
	AclOnly interface{}
	// The Secret algorithm.
	Algorithm interface{}
	// The Secret bit length.
	BitLength interface{}
	// Date filter to select the Secret with
	// created matching the specified criteria. See Date Filters below for more
	// detail.
	CreatedAtFilter interface{}
	// Date filter to select the Secret with
	// expiration matching the specified criteria. See Date Filters below for more
	// detail.
	ExpirationFilter interface{}
	// The Secret mode.
	Mode interface{}
	// The Secret name.
	Name interface{}
	// The region in which to obtain the V1 KeyManager client.
	// A KeyManager client is needed to fetch a secret. If omitted, the `region`
	// argument of the provider is used.
	Region interface{}
	// The Secret type. For more information see
	// [Secret types](https://docs.openstack.org/barbican/latest/api/reference/secret_types.html).
	SecretType interface{}
	// Date filter to select the Secret with
	// updated matching the specified criteria. See Date Filters below for more
	// detail.
	UpdatedAtFilter interface{}
}

// A collection of values returned by getSecret.
type GetSecretResult struct {
	// See Argument Reference above.
	AclOnly interface{}
	// See Argument Reference above.
	Algorithm interface{}
	// See Argument Reference above.
	BitLength interface{}
	// The map of the content types, assigned on the secret.
	ContentTypes interface{}
	// The date the secret was created.
	CreatedAt interface{}
	// See Argument Reference above.
	CreatedAtFilter interface{}
	// The creator of the secret.
	CreatorId interface{}
	// The date the secret will expire.
	Expiration interface{}
	// See Argument Reference above.
	ExpirationFilter interface{}
	// The map of metadata, assigned on the secret, which has been
	// explicitly and implicitly added.
	Metadata interface{}
	// See Argument Reference above.
	Mode interface{}
	// See Argument Reference above.
	Name interface{}
	// The secret payload.
	Payload interface{}
	// The Secret encoding.
	PayloadContentEncoding interface{}
	// The Secret content type.
	PayloadContentType interface{}
	// See Argument Reference above.
	Region interface{}
	// The secret reference / where to find the secret.
	SecretRef interface{}
	// See Argument Reference above.
	SecretType interface{}
	// The status of the secret.
	Status interface{}
	// The date the secret was last updated.
	UpdatedAt interface{}
	// See Argument Reference above.
	UpdatedAtFilter interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
