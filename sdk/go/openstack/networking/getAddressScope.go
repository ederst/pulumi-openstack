// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an available OpenStack address-scope.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/networking_addressscope_v2.html.markdown.
func LookupAddressScope(ctx *pulumi.Context, args *GetAddressScopeArgs) (*GetAddressScopeResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["ipVersion"] = args.IpVersion
		inputs["name"] = args.Name
		inputs["projectId"] = args.ProjectId
		inputs["region"] = args.Region
		inputs["shared"] = args.Shared
	}
	outputs, err := ctx.Invoke("openstack:networking/getAddressScope:getAddressScope", inputs)
	if err != nil {
		return nil, err
	}
	return &GetAddressScopeResult{
		IpVersion: outputs["ipVersion"],
		Name: outputs["name"],
		ProjectId: outputs["projectId"],
		Region: outputs["region"],
		Shared: outputs["shared"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getAddressScope.
type GetAddressScopeArgs struct {
	// IP version.
	IpVersion interface{}
	// Name of the address-scope.
	Name interface{}
	// The owner of the address-scope.
	ProjectId interface{}
	// The region in which to obtain the V2 Neutron client.
	// A Neutron client is needed to retrieve address-scopes. If omitted, the
	// `region` argument of the provider is used.
	Region interface{}
	// Indicates whether this address-scope is shared across
	// all projects.
	Shared interface{}
}

// A collection of values returned by getAddressScope.
type GetAddressScopeResult struct {
	// See Argument Reference above.
	IpVersion interface{}
	// See Argument Reference above.
	Name interface{}
	// See Argument Reference above.
	ProjectId interface{}
	Region interface{}
	// See Argument Reference above.
	Shared interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
