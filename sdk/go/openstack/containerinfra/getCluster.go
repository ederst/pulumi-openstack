// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerinfra

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an available OpenStack Magnum cluster.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/containerinfra_cluster_v1.html.markdown.
func LookupCluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["region"] = args.Region
	}
	outputs, err := ctx.Invoke("openstack:containerinfra/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetClusterResult{
		ApiAddress: outputs["apiAddress"],
		ClusterTemplateId: outputs["clusterTemplateId"],
		CoeVersion: outputs["coeVersion"],
		ContainerVersion: outputs["containerVersion"],
		CreateTimeout: outputs["createTimeout"],
		CreatedAt: outputs["createdAt"],
		DiscoveryUrl: outputs["discoveryUrl"],
		DockerVolumeSize: outputs["dockerVolumeSize"],
		FixedNetwork: outputs["fixedNetwork"],
		FixedSubnet: outputs["fixedSubnet"],
		Flavor: outputs["flavor"],
		Keypair: outputs["keypair"],
		Labels: outputs["labels"],
		MasterAddresses: outputs["masterAddresses"],
		MasterCount: outputs["masterCount"],
		MasterFlavor: outputs["masterFlavor"],
		Name: outputs["name"],
		NodeAddresses: outputs["nodeAddresses"],
		NodeCount: outputs["nodeCount"],
		ProjectId: outputs["projectId"],
		Region: outputs["region"],
		StackId: outputs["stackId"],
		UpdatedAt: outputs["updatedAt"],
		UserId: outputs["userId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// The name of the cluster.
	Name interface{}
	// The region in which to obtain the V1 Container Infra
	// client.
	// If omitted, the `region` argument of the provider is used.
	Region interface{}
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	// COE API address.
	ApiAddress interface{}
	// The UUID of the V1 Container Infra cluster template.
	ClusterTemplateId interface{}
	// COE software version.
	CoeVersion interface{}
	ContainerVersion interface{}
	// The timeout (in minutes) for creating the cluster.
	CreateTimeout interface{}
	// The time at which cluster was created.
	CreatedAt interface{}
	// The URL used for cluster node discovery.
	DiscoveryUrl interface{}
	// The size (in GB) of the Docker volume.
	DockerVolumeSize interface{}
	// The fixed network that is attached to the cluster.
	FixedNetwork interface{}
	// The fixed subnet that is attached to the cluster.
	FixedSubnet interface{}
	// The flavor for the nodes of the cluster.
	Flavor interface{}
	// The name of the Compute service SSH keypair.
	Keypair interface{}
	// The list of key value pairs representing additional properties of
	// the cluster.
	Labels interface{}
	// IP addresses of the master node of the cluster.
	MasterAddresses interface{}
	// The number of master nodes for the cluster.
	MasterCount interface{}
	// The flavor for the master nodes.
	MasterFlavor interface{}
	// See Argument Reference above.
	Name interface{}
	// IP addresses of the node of the cluster.
	NodeAddresses interface{}
	// The number of nodes for the cluster.
	NodeCount interface{}
	// The project of the cluster.
	ProjectId interface{}
	// See Argument Reference above.
	Region interface{}
	// UUID of the Orchestration service stack.
	StackId interface{}
	// The time at which cluster was updated.
	UpdatedAt interface{}
	// The user of the cluster.
	UserId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
