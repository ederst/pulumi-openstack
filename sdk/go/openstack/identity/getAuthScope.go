// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get authentication information about the current
// auth scope in use. This can be used as self-discovery or introspection of
// the username or project name currently in use.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/identity_auth_scope_v3.html.markdown.
func LookupAuthScope(ctx *pulumi.Context, args *GetAuthScopeArgs) (*GetAuthScopeResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["region"] = args.Region
	}
	outputs, err := ctx.Invoke("openstack:identity/getAuthScope:getAuthScope", inputs)
	if err != nil {
		return nil, err
	}
	return &GetAuthScopeResult{
		Name: outputs["name"],
		ProjectDomainId: outputs["projectDomainId"],
		ProjectDomainName: outputs["projectDomainName"],
		ProjectId: outputs["projectId"],
		ProjectName: outputs["projectName"],
		Region: outputs["region"],
		Roles: outputs["roles"],
		UserDomainId: outputs["userDomainId"],
		UserDomainName: outputs["userDomainName"],
		UserId: outputs["userId"],
		UserName: outputs["userName"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getAuthScope.
type GetAuthScopeArgs struct {
	// The name of the scope. This is an arbitrary name which is
	// only used as a unique identifier so an actual token isn't used as the ID.
	Name interface{}
	// The region in which to obtain the V3 Identity client.
	// A Identity client is needed to retrieve tokens IDs. If omitted, the
	// `region` argument of the provider is used.
	Region interface{}
}

// A collection of values returned by getAuthScope.
type GetAuthScopeResult struct {
	Name interface{}
	// The domain ID of the project.
	ProjectDomainId interface{}
	// The domain name of the project.
	ProjectDomainName interface{}
	// The project ID of the scope.
	ProjectId interface{}
	// The project name of the scope.
	ProjectName interface{}
	Region interface{}
	// A list of roles in the current scope. See reference below.
	Roles interface{}
	// The domain ID of the user.
	UserDomainId interface{}
	// The domain name of the user.
	UserDomainName interface{}
	// The user ID the of the scope.
	UserId interface{}
	// The username of the scope.
	UserName interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
