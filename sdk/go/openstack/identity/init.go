// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-openstack/sdk/v2/go/openstack"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "openstack:identity/applicationCredential:ApplicationCredential":
		r, err = NewApplicationCredential(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/ec2CredentialV3:Ec2CredentialV3":
		r, err = NewEc2CredentialV3(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/endpointV3:EndpointV3":
		r, err = NewEndpointV3(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/groupV3:GroupV3":
		r, err = NewGroupV3(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/project:Project":
		r, err = NewProject(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/role:Role":
		r, err = NewRole(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/roleAssignment:RoleAssignment":
		r, err = NewRoleAssignment(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/serviceV3:ServiceV3":
		r, err = NewServiceV3(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/user:User":
		r, err = NewUser(ctx, name, nil, pulumi.URN_(urn))
	case "openstack:identity/userMembershipV3:UserMembershipV3":
		r, err = NewUserMembershipV3(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := openstack.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/applicationCredential",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/ec2CredentialV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/endpointV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/groupV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/roleAssignment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/serviceV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"openstack",
		"identity/userMembershipV3",
		&module{version},
	)
}
