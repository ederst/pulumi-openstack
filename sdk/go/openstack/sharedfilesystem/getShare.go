// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sharedfilesystem

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an available Shared File System share.
func LookupShare(ctx *pulumi.Context, args *GetShareArgs) (*GetShareResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["description"] = args.Description
		inputs["exportLocationPath"] = args.ExportLocationPath
		inputs["isPublic"] = args.IsPublic
		inputs["metadata"] = args.Metadata
		inputs["name"] = args.Name
		inputs["region"] = args.Region
		inputs["shareNetworkId"] = args.ShareNetworkId
		inputs["snapshotId"] = args.SnapshotId
		inputs["status"] = args.Status
	}
	outputs, err := ctx.Invoke("openstack:sharedfilesystem/getShare:getShare", inputs)
	if err != nil {
		return nil, err
	}
	return &GetShareResult{
		AvailabilityZone: outputs["availabilityZone"],
		Description: outputs["description"],
		ExportLocationPath: outputs["exportLocationPath"],
		ExportLocations: outputs["exportLocations"],
		IsPublic: outputs["isPublic"],
		Metadata: outputs["metadata"],
		Name: outputs["name"],
		ProjectId: outputs["projectId"],
		Region: outputs["region"],
		ShareNetworkId: outputs["shareNetworkId"],
		ShareProto: outputs["shareProto"],
		Size: outputs["size"],
		SnapshotId: outputs["snapshotId"],
		Status: outputs["status"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getShare.
type GetShareArgs struct {
	// The human-readable description for the share.
	Description interface{}
	// The export location path of the share. Available
	// since Manila API version 2.35.
	ExportLocationPath interface{}
	// The level of visibility for the share.
	// length.
	IsPublic interface{}
	// One or more metadata key and value pairs as a dictionary of
	// strings.
	Metadata interface{}
	// The name of the share.
	Name interface{}
	Region interface{}
	// The UUID of the share's share network.
	ShareNetworkId interface{}
	// The UUID of the share's base snapshot.
	SnapshotId interface{}
	// A share status filter. A valid value is `creating`,
	// `error`, `available`, `deleting`, `error_deleting`, `manage_starting`,
	// `manage_error`, `unmanage_starting`, `unmanage_error`, `unmanaged`,
	// `extending`, `extending_error`, `shrinking`, `shrinking_error`, or
	// `shrinking_possible_data_loss_error`.
	Status interface{}
}

// A collection of values returned by getShare.
type GetShareResult struct {
	// The share availability zone.
	AvailabilityZone interface{}
	// See Argument Reference above.
	Description interface{}
	// See Argument Reference above.
	ExportLocationPath interface{}
	// A list of export locations. For example, when a share
	// server has more than one network interface, it can have multiple export
	// locations.
	ExportLocations interface{}
	// See Argument Reference above.
	IsPublic interface{}
	// See Argument Reference above.
	Metadata interface{}
	// See Argument Reference above.
	Name interface{}
	// See Argument Reference above.
	ProjectId interface{}
	// The region in which to obtain the V2 Shared File System client.
	Region interface{}
	// See Argument Reference above.
	ShareNetworkId interface{}
	// The share protocol.
	ShareProto interface{}
	// The share size, in GBs.
	Size interface{}
	// See Argument Reference above.
	SnapshotId interface{}
	// See Argument Reference above.
	Status interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
