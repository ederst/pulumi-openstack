// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sharedfilesystem

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get the ID of an available Shared File System share network.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/sharedfilesystem_sharenetwork_v2.html.markdown.
func LookupShareNetwork(ctx *pulumi.Context, args *GetShareNetworkArgs) (*GetShareNetworkResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["description"] = args.Description
		inputs["ipVersion"] = args.IpVersion
		inputs["name"] = args.Name
		inputs["networkType"] = args.NetworkType
		inputs["neutronNetId"] = args.NeutronNetId
		inputs["neutronSubnetId"] = args.NeutronSubnetId
		inputs["region"] = args.Region
		inputs["securityServiceId"] = args.SecurityServiceId
		inputs["segmentationId"] = args.SegmentationId
	}
	outputs, err := ctx.Invoke("openstack:sharedfilesystem/getShareNetwork:getShareNetwork", inputs)
	if err != nil {
		return nil, err
	}
	return &GetShareNetworkResult{
		Cidr: outputs["cidr"],
		Description: outputs["description"],
		IpVersion: outputs["ipVersion"],
		Name: outputs["name"],
		NetworkType: outputs["networkType"],
		NeutronNetId: outputs["neutronNetId"],
		NeutronSubnetId: outputs["neutronSubnetId"],
		ProjectId: outputs["projectId"],
		Region: outputs["region"],
		SecurityServiceId: outputs["securityServiceId"],
		SecurityServiceIds: outputs["securityServiceIds"],
		SegmentationId: outputs["segmentationId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getShareNetwork.
type GetShareNetworkArgs struct {
	// The human-readable description of the share network.
	Description interface{}
	// The IP version of the share network. Can either be 4 or 6.
	IpVersion interface{}
	// The name of the share network.
	Name interface{}
	// The share network type. Can either be VLAN, VXLAN,
	// GRE, or flat.
	NetworkType interface{}
	// The neutron network UUID of the share network.
	NeutronNetId interface{}
	// The neutron subnet UUID of the share network.
	NeutronSubnetId interface{}
	// The region in which to obtain the V2 Shared File System client.
	// A Shared File System client is needed to read a share network. If omitted, the
	// `region` argument of the provider is used.
	Region interface{}
	// The security service IDs associated with
	// the share network.
	SecurityServiceId interface{}
	// The share network segmentation ID.
	SegmentationId interface{}
}

// A collection of values returned by getShareNetwork.
type GetShareNetworkResult struct {
	// See Argument Reference above.
	Cidr interface{}
	// See Argument Reference above.
	Description interface{}
	// See Argument Reference above.
	IpVersion interface{}
	// See Argument Reference above.
	Name interface{}
	// See Argument Reference above.
	NetworkType interface{}
	// See Argument Reference above.
	NeutronNetId interface{}
	// See Argument Reference above.
	NeutronSubnetId interface{}
	// The owner of the Share Network.
	ProjectId interface{}
	// See Argument Reference above.
	Region interface{}
	// See Argument Reference above.
	SecurityServiceId interface{}
	// The list of security service IDs associated with
	// the share network.
	SecurityServiceIds interface{}
	// See Argument Reference above.
	SegmentationId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
