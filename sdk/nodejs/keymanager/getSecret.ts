// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-openstack/blob/master/website/docs/d/keymanager_secret_v1.html.markdown.
 */
export function getSecret(args?: GetSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretResult> & GetSecretResult {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetSecretResult> = pulumi.runtime.invoke("openstack:keymanager/getSecret:getSecret", {
        "aclOnly": args.aclOnly,
        "algorithm": args.algorithm,
        "bitLength": args.bitLength,
        "createdAtFilter": args.createdAtFilter,
        "expirationFilter": args.expirationFilter,
        "mode": args.mode,
        "name": args.name,
        "region": args.region,
        "secretType": args.secretType,
        "updatedAtFilter": args.updatedAtFilter,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretArgs {
    /**
     * Select the Secret with an ACL that contains the user.
     * Project scope is ignored. Defaults to `false`.
     */
    readonly aclOnly?: boolean;
    /**
     * The Secret algorithm.
     */
    readonly algorithm?: string;
    /**
     * The Secret bit length.
     */
    readonly bitLength?: number;
    /**
     * Date filter to select the Secret with
     * created matching the specified criteria. See Date Filters below for more
     * detail.
     */
    readonly createdAtFilter?: string;
    /**
     * Date filter to select the Secret with
     * expiration matching the specified criteria. See Date Filters below for more
     * detail.
     */
    readonly expirationFilter?: string;
    /**
     * The Secret mode.
     */
    readonly mode?: string;
    /**
     * The Secret name.
     */
    readonly name?: string;
    /**
     * The region in which to obtain the V1 KeyManager client.
     * A KeyManager client is needed to fetch a secret. If omitted, the `region`
     * argument of the provider is used.
     */
    readonly region?: string;
    /**
     * The Secret type. For more information see
     * [Secret types](https://docs.openstack.org/barbican/latest/api/reference/secret_types.html).
     */
    readonly secretType?: string;
    /**
     * Date filter to select the Secret with
     * updated matching the specified criteria. See Date Filters below for more
     * detail.
     */
    readonly updatedAtFilter?: string;
}

/**
 * A collection of values returned by getSecret.
 */
export interface GetSecretResult {
    /**
     * The list of ACLs assigned to a secret. The `read` structure is described below.
     */
    readonly acls: outputs.keymanager.GetSecretAcl[];
    /**
     * See Argument Reference above.
     */
    readonly aclOnly?: boolean;
    /**
     * See Argument Reference above.
     */
    readonly algorithm?: string;
    /**
     * See Argument Reference above.
     */
    readonly bitLength?: number;
    /**
     * The map of the content types, assigned on the secret.
     */
    readonly contentTypes: {[key: string]: any};
    /**
     * The date the secret ACL was created.
     */
    readonly createdAt: string;
    /**
     * See Argument Reference above.
     */
    readonly createdAtFilter?: string;
    /**
     * The creator of the secret.
     */
    readonly creatorId: string;
    /**
     * The date the secret will expire.
     */
    readonly expiration: string;
    /**
     * See Argument Reference above.
     */
    readonly expirationFilter?: string;
    /**
     * The map of metadata, assigned on the secret, which has been
     * explicitly and implicitly added.
     */
    readonly metadata: {[key: string]: any};
    /**
     * See Argument Reference above.
     */
    readonly mode?: string;
    /**
     * See Argument Reference above.
     */
    readonly name?: string;
    /**
     * The secret payload.
     */
    readonly payload: string;
    /**
     * The Secret encoding.
     */
    readonly payloadContentEncoding: string;
    /**
     * The Secret content type.
     */
    readonly payloadContentType: string;
    /**
     * See Argument Reference above.
     */
    readonly region?: string;
    /**
     * The secret reference / where to find the secret.
     */
    readonly secretRef: string;
    /**
     * See Argument Reference above.
     */
    readonly secretType?: string;
    /**
     * The status of the secret.
     */
    readonly status: string;
    /**
     * The date the secret ACL was last updated.
     */
    readonly updatedAt: string;
    /**
     * See Argument Reference above.
     */
    readonly updatedAtFilter?: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
